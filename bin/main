#!/usr/bin/env ruby

puts '
_______ _          _______             _______
|__   __(_)        |__   __|           |__   __|
   | |   _  ___ ______| | __ _  ___ ______| | ___   ___
   | |  | |/ __|______| |/ _` |/ __|______| |/ _ \ / _ \
   | |  | | (__       | | (_| | (__       | | (_) |  __/
   |_|  |_|\___|      |_|\__,_|\___|      |_|\___/ \___|
'
puts '


'
puts "What's your name?"
user = gets.chomp
user = 'Stranger' if user == '';
puts '


'
puts "Hi #{user}" 
puts "Welcome to TIC TAC TOE game"

puts '


'

# Game instructions


class Player
	attr_reader :name
	attr_reader :letter
	def initialize(name, letter)
		@name = name
		@letter = letter
	end

	def pick_slot(value)
		if !$values.include? value
			return "#{value} is not allowed, pick a number from 1 to 9"
		end
		@value = value - 1
	end
end


class Game
	attr_accessor :empty_squares, :num, :val, :squares

	$values = (1..9).to_a
	$played = false

	def initialize
		@num = nil
		@empty_squares = nil
		@val = 0
		@squares = Hash.new(nil)
	end

	def play(character, name)
		loop do
			puts "choose a random number between 1 and 9"
			@slot = gets.chomp.to_i
			break if @slot >= 1 || @slot <= 9
		end
		while @squares.has_key? @slot
			puts "you cannot choose #{slot} again"
			puts "choose another number"
		end
		@squares[@slot-1] = character
		puts @squares
		@val += 1
		if @val == 10
			return
		end
		# @played = !@played
		res = checkmatch(@slot)
		if res = character
			puts "#{name} has won"
			return
		end
	end

	def reset
		@squares = Hash.new(nil)
		attr_accessor :squares
	end

	def stop
		attr_reader :squares
	end

	def checkmatch(char)
		if @squares[0] == char && @squares[1] == char && @squares[2] == char
			return char
		elsif @squares[3] == char && @squares[4] == char && @squares[5] == char
			return char
		elsif @squares[6] == char && @squares[7] == char && @squares[8] == char
			return char
		elsif @squares[0] == char && @squares[3] == char && @squares[6] == char
			return char
		elsif @squares[1] == char && @squares[4] == char && @squares[7] == char
			return char
		elsif @squares[2] == char && @squares[5] == char && @squares[8] == char
			return char
		elsif @squares[0] == char && @squares[4] == char && @squares[8] == char
			return char
		elsif @squares[2] == char && @squares[4] == char && @squares[6] == char
			return char
		end
	end

	# def self.display_squares
	# 	@@squares
	# end
end

class Scoreboard
	attr_reader :x_score
	attr_reader :o_score

	def initialize
		@x_score = 0
		@o_score = 0
	end

	def increment_x
		@x_score += 1
	end

	def increment_o
		@o_score += 1
	end
end

# class Tournament
# 	def initialize(limit)5
# 		@limit = limit
# 	end
# end

# class Automode < Game
# 	def initialize(limit)
# 		@limit = limit
# 	end
# end
 

def init
	puts "Are you ready?"
	puts "hit p to continue"
	pl = gets.chomp
	while pl.downcase != 'p'
		puts "hit p to continue"
		pl = gets.chomp
	end
	puts "How many players?"
	no_of_players = gets.chomp.to_i
	while no_of_players > 2 || no_of_players < 1
		puts "you can only have 1 or 2 players"
		puts "How many players?"
		no_of_players = gets.chomp.to_i
	end
	no_of_players
end

$players_num = init

def get_details
	puts "player1, whats your name?"
	name1 = gets.chomp
	name1 = 'user1' if name1 == ''

	if $players_num == 2
		$letter2 = nil
		# puts "player1, choose 'x' or 'o'?"
		# letter1 = gets.chomp.downcase
		loop do
			puts "player1, choose 'x' or 'o'?"
			$letter1 = gets.chomp.downcase
			break if $letter1 != 'x' || $letter1 != 'o'
		end
		# while letter1 != 'x' || letter1 != 'o'
			# puts "player1, choose 'x' or 'o'?"
			# letter1 = gets.chomp.downcase
		# end

		$letter2 = $letter1  == 'x' ? 'o' : 'x'

		puts "player2, whats your name?"
		name2 = gets.chomp
		name2 = user2 if name2 == ''
		$player1 = Player.new(name1, $letter1)
		$player2 = Player.new(name2, $letter2)
	else
		puts "player1, whats your name?"
		name1 = gets.chomp
		name1 = user1 if name1 == ''

		puts "player1, choose 'x' or 'o'?"
		$letter1 = gets.chomp.downcase
		loop do
			puts "player1, choose 'x' or 'o'?"
			$letter1 = gets.chomp.downcase
			break if $letter1 != 'x' || $letter1 != 'o'
		end
		player1 = Player.new(name1, letter1)
		# player2 = Player.new(name2, letter2)
	end
end
get_details

# player(player1, player2)


# def player(*opponents)
# 	opponents
# end
# players = player(player1, player2)


# players.each do |play|
# 	if players.size == 1
# 	end
# end

puts $player1.name
puts $player1.letter
puts $player2.name
puts $player2.letter

tictac = Game.new()
tictac.play($player1.letter, $player1.name)
tictac.play($player2.letter, $player2.name)

